/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.5.9 (3.5)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiv3_5

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableWirelessLANRequestAuthType * `open` - Open * `wep` - WEP * `wpa-personal` - WPA Personal (PSK) * `wpa-enterprise` - WPA Enterprise
type PatchedWritableWirelessLANRequestAuthType string

// List of PatchedWritableWirelessLANRequest_auth_type
const (
	PATCHEDWRITABLEWIRELESSLANREQUESTAUTHTYPE_OPEN           PatchedWritableWirelessLANRequestAuthType = "open"
	PATCHEDWRITABLEWIRELESSLANREQUESTAUTHTYPE_WEP            PatchedWritableWirelessLANRequestAuthType = "wep"
	PATCHEDWRITABLEWIRELESSLANREQUESTAUTHTYPE_WPA_PERSONAL   PatchedWritableWirelessLANRequestAuthType = "wpa-personal"
	PATCHEDWRITABLEWIRELESSLANREQUESTAUTHTYPE_WPA_ENTERPRISE PatchedWritableWirelessLANRequestAuthType = "wpa-enterprise"
	PATCHEDWRITABLEWIRELESSLANREQUESTAUTHTYPE_EMPTY          PatchedWritableWirelessLANRequestAuthType = ""
)

// All allowed values of PatchedWritableWirelessLANRequestAuthType enum
var AllowedPatchedWritableWirelessLANRequestAuthTypeEnumValues = []PatchedWritableWirelessLANRequestAuthType{
	"open",
	"wep",
	"wpa-personal",
	"wpa-enterprise",
	"",
}

func (v *PatchedWritableWirelessLANRequestAuthType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableWirelessLANRequestAuthType(value)
	for _, existing := range AllowedPatchedWritableWirelessLANRequestAuthTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableWirelessLANRequestAuthType", value)
}

// NewPatchedWritableWirelessLANRequestAuthTypeFromValue returns a pointer to a valid PatchedWritableWirelessLANRequestAuthType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableWirelessLANRequestAuthTypeFromValue(v string) (*PatchedWritableWirelessLANRequestAuthType, error) {
	ev := PatchedWritableWirelessLANRequestAuthType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableWirelessLANRequestAuthType: valid values are %v", v, AllowedPatchedWritableWirelessLANRequestAuthTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableWirelessLANRequestAuthType) IsValid() bool {
	for _, existing := range AllowedPatchedWritableWirelessLANRequestAuthTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableWirelessLANRequest_auth_type value
func (v PatchedWritableWirelessLANRequestAuthType) Ptr() *PatchedWritableWirelessLANRequestAuthType {
	return &v
}

type NullablePatchedWritableWirelessLANRequestAuthType struct {
	value *PatchedWritableWirelessLANRequestAuthType
	isSet bool
}

func (v NullablePatchedWritableWirelessLANRequestAuthType) Get() *PatchedWritableWirelessLANRequestAuthType {
	return v.value
}

func (v *NullablePatchedWritableWirelessLANRequestAuthType) Set(val *PatchedWritableWirelessLANRequestAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableWirelessLANRequestAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableWirelessLANRequestAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableWirelessLANRequestAuthType(val *PatchedWritableWirelessLANRequestAuthType) *NullablePatchedWritableWirelessLANRequestAuthType {
	return &NullablePatchedWritableWirelessLANRequestAuthType{value: val, isSet: true}
}

func (v NullablePatchedWritableWirelessLANRequestAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableWirelessLANRequestAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
