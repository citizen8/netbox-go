/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.6 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiv4_1

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableModuleTypeRequestAirflow * `front-to-rear` - Front to rear * `rear-to-front` - Rear to front * `left-to-right` - Left to right * `right-to-left` - Right to left * `side-to-rear` - Side to rear * `passive` - Passive
type PatchedWritableModuleTypeRequestAirflow string

// List of PatchedWritableModuleTypeRequest_airflow
const (
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_FRONT_TO_REAR PatchedWritableModuleTypeRequestAirflow = "front-to-rear"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_REAR_TO_FRONT PatchedWritableModuleTypeRequestAirflow = "rear-to-front"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_LEFT_TO_RIGHT PatchedWritableModuleTypeRequestAirflow = "left-to-right"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_RIGHT_TO_LEFT PatchedWritableModuleTypeRequestAirflow = "right-to-left"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_SIDE_TO_REAR  PatchedWritableModuleTypeRequestAirflow = "side-to-rear"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_PASSIVE       PatchedWritableModuleTypeRequestAirflow = "passive"
	PATCHEDWRITABLEMODULETYPEREQUESTAIRFLOW_EMPTY         PatchedWritableModuleTypeRequestAirflow = ""
)

// All allowed values of PatchedWritableModuleTypeRequestAirflow enum
var AllowedPatchedWritableModuleTypeRequestAirflowEnumValues = []PatchedWritableModuleTypeRequestAirflow{
	"front-to-rear",
	"rear-to-front",
	"left-to-right",
	"right-to-left",
	"side-to-rear",
	"passive",
	"",
}

func (v *PatchedWritableModuleTypeRequestAirflow) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableModuleTypeRequestAirflow(value)
	for _, existing := range AllowedPatchedWritableModuleTypeRequestAirflowEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableModuleTypeRequestAirflow", value)
}

// NewPatchedWritableModuleTypeRequestAirflowFromValue returns a pointer to a valid PatchedWritableModuleTypeRequestAirflow
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableModuleTypeRequestAirflowFromValue(v string) (*PatchedWritableModuleTypeRequestAirflow, error) {
	ev := PatchedWritableModuleTypeRequestAirflow(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableModuleTypeRequestAirflow: valid values are %v", v, AllowedPatchedWritableModuleTypeRequestAirflowEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableModuleTypeRequestAirflow) IsValid() bool {
	for _, existing := range AllowedPatchedWritableModuleTypeRequestAirflowEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableModuleTypeRequest_airflow value
func (v PatchedWritableModuleTypeRequestAirflow) Ptr() *PatchedWritableModuleTypeRequestAirflow {
	return &v
}

type NullablePatchedWritableModuleTypeRequestAirflow struct {
	value *PatchedWritableModuleTypeRequestAirflow
	isSet bool
}

func (v NullablePatchedWritableModuleTypeRequestAirflow) Get() *PatchedWritableModuleTypeRequestAirflow {
	return v.value
}

func (v *NullablePatchedWritableModuleTypeRequestAirflow) Set(val *PatchedWritableModuleTypeRequestAirflow) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableModuleTypeRequestAirflow) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableModuleTypeRequestAirflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableModuleTypeRequestAirflow(val *PatchedWritableModuleTypeRequestAirflow) *NullablePatchedWritableModuleTypeRequestAirflow {
	return &NullablePatchedWritableModuleTypeRequestAirflow{value: val, isSet: true}
}

func (v NullablePatchedWritableModuleTypeRequestAirflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableModuleTypeRequestAirflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
